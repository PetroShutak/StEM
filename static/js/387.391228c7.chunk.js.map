{"version":3,"file":"static/js/387.391228c7.chunk.js","mappings":"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","sources":["components/NoFavorites/NoFavorites.styled.jsx","components/NoFavorites/NoFavorites.jsx","components/QuantityModal/QuantityCounter/QuantityCounter.styled.jsx","components/QuantityModal/QuantityCounter/QuantityCounter.jsx","components/ProductList/ProductItem/ProductItem.jsx","components/ProductList/ProductList.styled.jsx","components/ProductList/ProductList.jsx","pages/ShoppingListPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  // outline: 2px solid tomato;\n  background-color: var(--text-color-primary-white);\n  img {\n    border-radius: 12px;\n    margin-bottom: 25px;\n  }\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 100%;\n\n  @media screen and (min-width: 480px) {\n    max-width: 480px;\n  }\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    max-width: 1200px;\n  }\n`;\n\nexport const Text = styled.p`\n  font-family: var(--font-family-secondary);\n  margin-bottom: 25px;\n  color: var(--text-color-primary-black);\n  text-align: center;\n  font-size: 14px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const Button = styled.button`\n  font-family: var(--font-family-secondary);\n  width: 270px;\n  height: 44px;\n  margin-bottom: 50px;\n  border: 0.5px solid var(--bg-secondary);\n  border-radius: 12px;\n  background-color: var(--bg-secondary);\n  color: var(--text-color-primary-black);\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.43;\n  cursor: pointer;\n  transition: background-color var(--transition-default);\n    &:hover,\n    &:focus {\n        background-color: var(--bg-secondary-hover);\n`;\n","import { useNavigate } from 'react-router-dom';\nimport noResultsFound from '../../images/No_results_found.jpg';\nimport { Button, Container, Text } from './NoFavorites.styled';\nimport { useSelector } from 'react-redux';\nimport { selectLoading } from '../../redux/products/selectors';\nimport Loader from 'components/Loader/Loader';\n\nconst NoFavorites = () => {\n  const navigate = useNavigate();\n  const loading = useSelector(selectLoading);\n\n  return (\n    <>\n      {loading ? (\n        <Loader />\n      ) : (\n        <Container>\n          <Text>\n            Тут поки нічого немає... <br />\n            Переходь в каталог і додай товар.\n          </Text>\n          <img\n            src={noResultsFound}\n            alt=\"No results found\"\n            width=\"400\"\n            height=\"400\"\n            loading=\"lazy\"\n          />\n          <Button onClick={() => navigate('/catalog')}>Відкрити каталог</Button>\n        </Container>\n      )}\n    </>\n  );\n};\n\nexport default NoFavorites;\n","import styled from 'styled-components';\n\nexport const Counter = styled.div`\n  font-size: 16px;\n  font-weight: 600;\n  font-family: var(--font-family-secondary);\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const CounterButton = styled.button`\n  width: 28px;\n  height: 28px;\n  padding: 0;\n  border: none;\n  border-radius: 5px;\n  background-color: var(--bg-secondary);\n  color: white;\n  font-size: 16px;\n  font-weight: 700;\n  cursor: pointer;\n  transition: all 250ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Counter, CounterButton } from './QuantityCounter.styled';\nimport { selectShoppingList } from '../../../redux/products/selectors';\nimport {\n  deleteFromList,\n  updateQuantityInList,\n} from '../../../redux/products/shoppingListSlice';\nimport { notifyRemove } from 'utils/toasts';\n\nconst QuantityCounter = ({ productId }) => {\n  const dispatch = useDispatch();\n  const shoppingList = useSelector(selectShoppingList);\n\n  const product = shoppingList.find(item => item.id === productId);\n\n  const handleIncrement = id => {\n    dispatch(updateQuantityInList({ id, changeQuantity: 1 }));\n  };\n\n  const handleDecrement = id => {\n    if (product.quantity > 1) {\n      dispatch(updateQuantityInList({ id, changeQuantity: -1 }));\n    } else if (product.quantity === 1) {\n      dispatch(updateQuantityInList({ id, changeQuantity: -1 }));\n      dispatch(deleteFromList({ id }));\n      notifyRemove();\n    }\n  };\n\n  if (!product) {\n    return null;\n  }\n\n  return (\n    <div>\n      <Counter>\n        <CounterButton onClick={() => handleDecrement(product.id)}>\n          -\n        </CounterButton>\n        <p>{product.quantity}</p>\n        <CounterButton onClick={() => handleIncrement(product.id)}>\n          +\n        </CounterButton>\n      </Counter>\n    </div>\n  );\n};\n\nexport default QuantityCounter;\n","import React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  notifyAddShopingList,\n  notifyRemove,\n  notifyAddToFavorite,\n  notifyRemoveFromFavorite,\n} from 'utils/toasts';\nimport {\n  addFavorite,\n  deleteFavorite,\n} from '../../../redux/products/favoriteSlice';\nimport {\n  selectFavorites,\n  selectShoppingList,\n} from '../../../redux/products/selectors';\nimport {\n  Item,\n  ProductImage,\n  ProductName,\n  ProductPrice,\n  FavoriteButton,\n  FavoriteButtonActive,\n  ButtonAdd,\n  Tooltip,\n  TooltipDetails,\n  TitleLink,\n  TitleLinkContainer,\n  TooltipQuantity,\n} from './ProductItem.styled';\nimport {\n  addToList,\n  deleteFromList,\n} from '../../../redux/products/shoppingListSlice';\n\nimport {\n  setTotalPrice,\n  resetTotalPrice,\n} from '../../../redux/products/shoppingListSlice';\nimport QuantityModal from 'components/QuantityModal/QuantityModal';\nimport DEFAULT_URL from 'images/no-image.jpg';\nimport QuantityCounter from 'components/QuantityModal/QuantityCounter/QuantityCounter';\n\nconst ProductItem = ({ id, name, brand, price, image }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [showTooltip, setShowTooltip] = useState(false);\n  const [showTooltipDetails, setShowTooltipDetails] = useState(false);\n  // const [showTooltipQuantity, setShowTooltipQuantity] = useState(false);\n  const favorites = useSelector(selectFavorites);\n  const shoppingList = useSelector(selectShoppingList);\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  const handleDetailsClick = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  const handleAddFavorites = favId => {\n    dispatch(addFavorite(favId));\n    notifyAddToFavorite();\n  };\n\n  const handleRemoveFavorites = favId => {\n    dispatch(deleteFavorite(favId));\n    notifyRemoveFromFavorite();\n  };\n\n  const handleAddToShoppingList = listId => {\n    const payload = { id: listId };\n\n    if (shoppingList.some(item => item.id === listId)) {\n      dispatch(deleteFromList(payload));\n      notifyRemove();\n      if (shoppingList.length === 1) {\n        dispatch(resetTotalPrice());\n      }\n    } else {\n      setShowModal(true);\n    }\n  };\n\n  const handleConfirmAddToShoppingList = (id, quantity, totalPrice) => {\n    dispatch(addToList({ id, price, quantity }));\n    dispatch(setTotalPrice(totalPrice));\n    setShowModal(false);\n    notifyAddShopingList();\n  };\n\n  const isImageLink = str => {\n    return /(http(s?):)([/|.|\\w|\\s|-])*\\.(?:jpg|gif|png)/g.test(str);\n  };\n  return (\n    <Item>\n      <div>\n        {favorites.includes(id) ? (\n          <FavoriteButtonActive onClick={() => handleRemoveFavorites(id)} />\n        ) : (\n          <FavoriteButton onClick={() => handleAddFavorites(id)} />\n        )}\n        {isImageLink(image) ? (\n          <ProductImage src={image} alt={name} width=\"100%\" height=\"100%\" />\n        ) : (\n          <ProductImage\n            src={DEFAULT_URL}\n            alt={name}\n            width=\"100%\"\n            height=\"100%\"\n          />\n        )}\n\n        <TitleLinkContainer\n          onMouseEnter={() => setShowTooltipDetails(true)}\n          onMouseLeave={() => setShowTooltipDetails(false)}\n        >\n          <TitleLink\n            to={`/catalog/${id}`}\n            state={{ from: location }}\n            onClick={handleDetailsClick}\n          >\n            <ProductName>\n              {name} - {brand}\n            </ProductName>\n          </TitleLink>\n          {showTooltipDetails && <TooltipDetails>Детальніше</TooltipDetails>}\n        </TitleLinkContainer>\n        <ProductPrice>{price} ₴</ProductPrice>\n        <div\n          onMouseEnter={() => setShowTooltip(true)}\n          onMouseLeave={() => setShowTooltip(false)}\n        >\n          <ButtonAdd onClick={() => handleAddToShoppingList(id)} />\n          {showTooltip && (\n            <Tooltip>\n              {shoppingList.some(item => item.id === id)\n                ? 'Забрати з кошика'\n                : 'Додати в кошик'}\n            </Tooltip>\n          )}\n        </div>\n      </div>\n      <TooltipQuantity>\n        <QuantityCounter productId={id} />\n      </TooltipQuantity>\n\n      <QuantityModal\n        showModal={showModal}\n        setShowModal={setShowModal}\n        handleConfirmAddToShoppingList={handleConfirmAddToShoppingList}\n        id={id}\n        price={price}\n      />\n    </Item>\n  );\n};\n\nexport default ProductItem;\n","import styled from 'styled-components';\n\nexport const ProductListStyled = styled.div`\n  background-color: inherit;\n`;\n\nexport const List = styled.div`\n  display: flex;\n  gap: 12px;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  margin: 0 auto;\n  padding: 15px;\n  @media screen and (min-width: 768px) {\n    margin: 0 auto;\n    // padding-bottom: 100px;\n  }\n`;\n","import React from 'react';\nimport ProductsItem from '../ProductList/ProductItem/ProductItem';\nimport { ProductListStyled, List } from './ProductList.styled';\n\nconst ProductList = ({ products }) => {\n  return (\n    <ProductListStyled>\n      <List>\n        {products.map(\n          ({\n            _id,\n            name,\n            brand,\n            model,\n            description,\n            price,\n            image,\n            category,\n            subcategory,\n            raiting,\n            country,\n          }) => (\n            <ProductsItem\n              key={_id}\n              id={_id}\n              name={name}\n              image={image}\n              description={description}\n              price={price}\n              category={category}\n              subcategory={subcategory}\n              brand={brand}\n              model={model}\n              raiting={raiting}\n              country={country}\n            />\n          )\n        )}\n      </List>\n    </ProductListStyled>\n  );\n};\n\nexport default ProductList;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getAllProducts } from 'redux/products/operations';\nimport {\n  selectIsFiltred,\n  selectShoppingListProducts,\n  selectFiltredShoppingListProducts,\n  selectTotalPrice,\n} from '../redux/products/selectors';\nimport ProductList from 'components/ProductList/ProductList';\nimport NoFavorites from 'components/NoFavorites/NoFavorites';\nimport { resetFilter } from 'redux/products/filterSlice';\nimport {\n  resetShoppingList,\n  resetTotalPrice,\n} from 'redux/products/shoppingListSlice';\nimport styled from 'styled-components';\nimport { notifyRemove } from 'utils/toasts';\n\nconst CleanBtn = styled.button`\n  display: block;\n  margin: 0 auto;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 5px;\n  background-color: var(--bg-secondary);\n  font-family: var(--font-family-secondary);\n  color: var(--text-color-primary-white);\n  font-size: 16px;\n  cursor: pointer;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    background-color: var(--bg-secondary-hover);\n  }\n`;\n\nconst ShoppingListPage = () => {\n  const isFiltred = useSelector(selectIsFiltred);\n  const shoppingList = useSelector(selectShoppingListProducts);\n  const filtredShoppingList = useSelector(selectFiltredShoppingListProducts);\n  const dispatch = useDispatch();\n  const totalPrice = useSelector(selectTotalPrice);\n\n  const handleClearShoppingList = () => {\n    dispatch(resetTotalPrice());\n    dispatch(resetShoppingList());\n    notifyRemove();\n  };\n\n  useEffect(() => {\n    dispatch(getAllProducts());\n    dispatch(resetFilter());\n  }, [dispatch]);\n\n  return (\n    <div\n      style={{\n        paddingTop: '40px',\n        paddingBottom: '40px',\n        color: 'var(--text-color-primary-black)',\n        fontFamily: 'var(--font-family-secondary)',\n      }}\n    >\n      <h1\n        style={{\n          color: 'var(--text-color-primary-black)',\n          fontFamily: 'var(--font-family-secondary)',\n          marginBottom: '20px',\n        }}\n      >\n        Кошик\n      </h1>\n      <p\n        style={{\n          color: 'var(--text-color-primary-black)',\n          fontFamily: 'var(--font-family-secondary)',\n          marginBottom: '10px',\n        }}\n      >\n        Загальна вартість: {totalPrice} ₴.\n      </p>\n\n      {shoppingList.length === 0 ? (\n        <NoFavorites />\n      ) : (\n        <ProductList\n          products={isFiltred ? filtredShoppingList : shoppingList}\n        />\n      )}\n      {shoppingList.length === 0 ? null : (\n        <CleanBtn onClick={handleClearShoppingList}>Очистити кошик</CleanBtn>\n      )}\n    </div>\n  );\n};\n\nexport default ShoppingListPage;\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","Text","p","_templateObject2","Button","button","_templateObject3","NoFavorites","navigate","useNavigate","loading","useSelector","selectLoading","_jsx","_Fragment","children","Loader","_jsxs","src","noResultsFound","alt","width","height","onClick","Counter","CounterButton","_ref","productId","dispatch","useDispatch","product","selectShoppingList","find","item","id","handleDecrement","quantity","updateQuantityInList","changeQuantity","deleteFromList","notifyRemove","handleIncrement","name","brand","price","image","showModal","setShowModal","useState","showTooltip","setShowTooltip","showTooltipDetails","setShowTooltipDetails","favorites","selectFavorites","shoppingList","location","useLocation","Item","includes","FavoriteButtonActive","handleRemoveFavorites","favId","deleteFavorite","notifyRemoveFromFavorite","FavoriteButton","handleAddFavorites","addFavorite","notifyAddToFavorite","str","test","ProductImage","DEFAULT_URL","TitleLinkContainer","onMouseEnter","onMouseLeave","TitleLink","to","concat","state","from","handleDetailsClick","window","scrollTo","top","behavior","ProductName","TooltipDetails","ProductPrice","ButtonAdd","listId","payload","some","length","resetTotalPrice","handleAddToShoppingList","Tooltip","TooltipQuantity","QuantityCounter","QuantityModal","handleConfirmAddToShoppingList","totalPrice","addToList","setTotalPrice","notifyAddShopingList","ProductListStyled","List","products","map","_ref2","_id","model","description","category","subcategory","raiting","country","ProductsItem","CleanBtn","ShoppingListPage","isFiltred","selectIsFiltred","selectShoppingListProducts","filtredShoppingList","selectFiltredShoppingListProducts","selectTotalPrice","useEffect","getAllProducts","resetFilter","style","paddingTop","paddingBottom","color","fontFamily","marginBottom","ProductList","handleClearShoppingList","resetShoppingList"],"sourceRoot":""}