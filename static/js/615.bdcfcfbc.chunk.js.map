{"version":3,"file":"static/js/615.bdcfcfbc.chunk.js","mappings":"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","sources":["components/QuantityModal/QuantityCounter/QuantityCounter.styled.jsx","components/QuantityModal/QuantityCounter/QuantityCounter.jsx","components/ProductList/ProductItem/ProductItem.jsx","components/Header/TopHeader/SearchHeader/SearchResultsDisplay/SearchResultsDisplay.styled.jsx","components/Header/TopHeader/SearchHeader/SearchResultsDisplay/SearchResultsDisplay.jsx","pages/SearchResultPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Counter = styled.div`\n  font-size: 16px;\n  font-weight: 600;\n  font-family: var(--font-family-secondary);\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const CounterButton = styled.button`\n  width: 28px;\n  height: 28px;\n  padding: 0;\n  border: none;\n  border-radius: 5px;\n  background-color: var(--bg-secondary);\n  color: white;\n  font-size: 16px;\n  font-weight: 700;\n  cursor: pointer;\n  transition: all 250ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Counter, CounterButton } from './QuantityCounter.styled';\nimport { selectShoppingList } from '../../../redux/products/selectors';\nimport {\n  deleteFromList,\n  updateQuantityInList,\n} from '../../../redux/products/shoppingListSlice';\nimport { notifyRemove } from 'utils/toasts';\n\nconst QuantityCounter = ({ productId }) => {\n  const dispatch = useDispatch();\n  const shoppingList = useSelector(selectShoppingList);\n\n  const product = shoppingList.find(item => item.id === productId);\n\n  const handleIncrement = id => {\n    dispatch(updateQuantityInList({ id, changeQuantity: 1 }));\n  };\n\n  const handleDecrement = id => {\n    if (product.quantity > 1) {\n      dispatch(updateQuantityInList({ id, changeQuantity: -1 }));\n    } else if (product.quantity === 1) {\n      dispatch(updateQuantityInList({ id, changeQuantity: -1 }));\n      dispatch(deleteFromList({ id }));\n      notifyRemove();\n    }\n  };\n\n  if (!product) {\n    return null;\n  }\n\n  return (\n    <div>\n      <Counter>\n        <CounterButton onClick={() => handleDecrement(product.id)}>\n          -\n        </CounterButton>\n        <p>{product.quantity}</p>\n        <CounterButton onClick={() => handleIncrement(product.id)}>\n          +\n        </CounterButton>\n      </Counter>\n    </div>\n  );\n};\n\nexport default QuantityCounter;\n","import React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  notifyAddShopingList,\n  notifyRemove,\n  notifyAddToFavorite,\n  notifyRemoveFromFavorite,\n} from 'utils/toasts';\nimport {\n  addFavorite,\n  deleteFavorite,\n} from '../../../redux/products/favoriteSlice';\nimport {\n  selectFavorites,\n  selectShoppingList,\n} from '../../../redux/products/selectors';\nimport {\n  Item,\n  ProductImage,\n  ProductName,\n  ProductPrice,\n  FavoriteButton,\n  FavoriteButtonActive,\n  ButtonAdd,\n  Tooltip,\n  TooltipDetails,\n  TitleLink,\n  TitleLinkContainer,\n  TooltipQuantity,\n} from './ProductItem.styled';\nimport {\n  addToList,\n  deleteFromList,\n} from '../../../redux/products/shoppingListSlice';\n\nimport {\n  setTotalPrice,\n  resetTotalPrice,\n} from '../../../redux/products/shoppingListSlice';\nimport QuantityModal from 'components/QuantityModal/QuantityModal';\nimport DEFAULT_URL from 'images/no-image.jpg';\nimport QuantityCounter from 'components/QuantityModal/QuantityCounter/QuantityCounter';\n\nconst ProductItem = ({ id, name, brand, price, image }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [showTooltip, setShowTooltip] = useState(false);\n  const [showTooltipDetails, setShowTooltipDetails] = useState(false);\n  // const [showTooltipQuantity, setShowTooltipQuantity] = useState(false);\n  const favorites = useSelector(selectFavorites);\n  const shoppingList = useSelector(selectShoppingList);\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  const handleDetailsClick = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  const handleAddFavorites = favId => {\n    dispatch(addFavorite(favId));\n    notifyAddToFavorite();\n  };\n\n  const handleRemoveFavorites = favId => {\n    dispatch(deleteFavorite(favId));\n    notifyRemoveFromFavorite();\n  };\n\n  const handleAddToShoppingList = listId => {\n    const payload = { id: listId };\n\n    if (shoppingList.some(item => item.id === listId)) {\n      dispatch(deleteFromList(payload));\n      notifyRemove();\n      if (shoppingList.length === 1) {\n        dispatch(resetTotalPrice());\n      }\n    } else {\n      setShowModal(true);\n    }\n  };\n\n  const handleConfirmAddToShoppingList = (id, quantity, totalPrice) => {\n    dispatch(addToList({ id, price, quantity }));\n    dispatch(setTotalPrice(totalPrice));\n    setShowModal(false);\n    notifyAddShopingList();\n  };\n\n  const isImageLink = str => {\n    return /(http(s?):)([/|.|\\w|\\s|-])*\\.(?:jpg|gif|png)/g.test(str);\n  };\n  return (\n    <Item>\n      <div>\n        {favorites.includes(id) ? (\n          <FavoriteButtonActive onClick={() => handleRemoveFavorites(id)} />\n        ) : (\n          <FavoriteButton onClick={() => handleAddFavorites(id)} />\n        )}\n        {isImageLink(image) ? (\n          <ProductImage src={image} alt={name} width=\"100%\" height=\"100%\" />\n        ) : (\n          <ProductImage\n            src={DEFAULT_URL}\n            alt={name}\n            width=\"100%\"\n            height=\"100%\"\n          />\n        )}\n\n        <TitleLinkContainer\n          onMouseEnter={() => setShowTooltipDetails(true)}\n          onMouseLeave={() => setShowTooltipDetails(false)}\n        >\n          <TitleLink\n            to={`/catalog/${id}`}\n            state={{ from: location }}\n            onClick={handleDetailsClick}\n          >\n            <ProductName>\n              {name} - {brand}\n            </ProductName>\n          </TitleLink>\n          {showTooltipDetails && <TooltipDetails>Детальніше</TooltipDetails>}\n        </TitleLinkContainer>\n        <ProductPrice>{price} ₴</ProductPrice>\n        <div\n          onMouseEnter={() => setShowTooltip(true)}\n          onMouseLeave={() => setShowTooltip(false)}\n        >\n          <ButtonAdd onClick={() => handleAddToShoppingList(id)} />\n          {showTooltip && (\n            <Tooltip>\n              {shoppingList.some(item => item.id === id)\n                ? 'Забрати з кошика'\n                : 'Додати в кошик'}\n            </Tooltip>\n          )}\n        </div>\n      </div>\n      <TooltipQuantity>\n        <QuantityCounter productId={id} />\n      </TooltipQuantity>\n\n      <QuantityModal\n        showModal={showModal}\n        setShowModal={setShowModal}\n        handleConfirmAddToShoppingList={handleConfirmAddToShoppingList}\n        id={id}\n        price={price}\n      />\n    </Item>\n  );\n};\n\nexport default ProductItem;\n","import styled from 'styled-components';\n\n\nexport const SearchList = styled.ul`\n  list-style: none;\n  padding: 0;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\n  gap: 20px;\n    `;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport ProductsItem from '../../../../ProductList/ProductItem/ProductItem';\nimport { SearchList } from './SearchResultsDisplay.styled';\nimport { selectSearchQuery } from 'redux/products/selectors';\n\nconst SearchResultsDisplay = ({ searchResults }) => {\n  const searchQuery = useSelector(selectSearchQuery);\n  return (\n    <div>\n      <h2\n        style={{\n          color: 'var(--text-color-primary-black)',\n          fontFamily: 'var(--font-family-secondary)',\n          marginBottom: '20px',\n        }}\n      >\n        Результати пошуку: \"{searchQuery}\" :\n      </h2>\n      <p\n        style={{\n          color: 'var(--text-color-primary-black)',\n          fontFamily: 'var(--font-family-secondary)',\n          marginBottom: '20px',\n        }}\n      >\n        Знайдено: {searchResults.length} .\n      </p>\n\n      <SearchList>\n        {searchResults.map(result => (\n          <ProductsItem\n            key={result._id}\n            id={result._id}\n            name={result.name}\n            brand={result.brand}\n            image={result.image}\n            price={result.price}\n          />\n        ))}\n      </SearchList>\n    </div>\n  );\n};\n\nexport default SearchResultsDisplay;\n","import SearchResultsDisplay from 'components/Header/TopHeader/SearchHeader/SearchResultsDisplay/SearchResultsDisplay';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectSearchResults } from 'redux/products/selectors';\n\nconst SearchResultPage = () => {\n  const searchResults = useSelector(selectSearchResults);\n  return (\n    <div\n      style={{\n        paddingTop: '40px',\n        paddingBottom: '40px',\n      }}\n    >\n      {searchResults.length === 0 ? (\n        <h2\n          style={{\n            color: 'var(--text-color-primary-black)',\n            fontFamily: 'var(--font-family-secondary)',\n            marginBottom: '20px',\n          }}\n        >\n          Нічого не знайдено. Спробуй ще.\n        </h2>\n      ) : (\n        <SearchResultsDisplay searchResults={searchResults} />\n      )}\n    </div>\n  );\n};\n\nexport default SearchResultPage;\n"],"names":["Counter","styled","div","_templateObject","_taggedTemplateLiteral","CounterButton","button","_templateObject2","_ref","productId","dispatch","useDispatch","product","useSelector","selectShoppingList","find","item","id","_jsx","children","_jsxs","onClick","handleDecrement","quantity","updateQuantityInList","changeQuantity","deleteFromList","notifyRemove","handleIncrement","name","brand","price","image","showModal","setShowModal","useState","showTooltip","setShowTooltip","showTooltipDetails","setShowTooltipDetails","favorites","selectFavorites","shoppingList","location","useLocation","Item","includes","FavoriteButtonActive","handleRemoveFavorites","favId","deleteFavorite","notifyRemoveFromFavorite","FavoriteButton","handleAddFavorites","addFavorite","notifyAddToFavorite","str","test","ProductImage","src","alt","width","height","DEFAULT_URL","TitleLinkContainer","onMouseEnter","onMouseLeave","TitleLink","to","concat","state","from","handleDetailsClick","window","scrollTo","top","behavior","ProductName","TooltipDetails","ProductPrice","ButtonAdd","listId","payload","some","length","resetTotalPrice","handleAddToShoppingList","Tooltip","TooltipQuantity","QuantityCounter","QuantityModal","handleConfirmAddToShoppingList","totalPrice","addToList","setTotalPrice","notifyAddShopingList","SearchList","ul","searchResults","searchQuery","selectSearchQuery","style","color","fontFamily","marginBottom","map","result","ProductsItem","_id","SearchResultPage","selectSearchResults","paddingTop","paddingBottom","SearchResultsDisplay"],"sourceRoot":""}